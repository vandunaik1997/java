/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Insurance;

import java.awt.Color;
import java.awt.Frame;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
import java.util.Random;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alinb
 */
public class Agent extends javax.swing.JFrame {

    /**
     * Creates new form Agent
     */
    int pX,pY;
    DefaultTableModel dm;
    String s,s1;
    public Agent() {
        initComponents();
        agname.setText(Login.user); 
        UIManager.put("Button.select",Color.TRANSLUCENT);
        UIManager.put("OptionPane.background",new java.awt.Color(0,153,0));
        UIManager.put("Panel.background",new java.awt.Color(0,153,0));
        UIManager.put("Button.background",Color.BLACK);
        UIManager.put("Button.foreground",new java.awt.Color(0,153,0));
        UIManager.put("Button.focus",Color.BLACK);
        UIManager.put("Button.focuspainted",Color.BLACK);
        UIManager.put("Button.rollover",false); 
        UIManager.put("Button.defaultButtonFollowsFocus ",false); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cpassword = new javax.swing.JButton();
        bcreatep = new javax.swing.JButton();
        home = new javax.swing.JPanel();
        welcome = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        agname = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        agentinfo = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        iname = new javax.swing.JLabel();
        ikey = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        iphoneno = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        ipolicy = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        iaddress = new javax.swing.JTextArea();
        policyinfo = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        createpolicy = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        csex = new javax.swing.JComboBox<>();
        jLabel28 = new javax.swing.JLabel();
        cpolicy = new javax.swing.JComboBox<>();
        caddress = new javax.swing.JTextArea();
        cphone = new javax.swing.JTextField();
        cname = new javax.swing.JTextField();
        clear = new javax.swing.JButton();
        createp = new javax.swing.JButton();
        cmsg = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        cpremium = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        commission = new javax.swing.JTextField();
        cdob = new com.toedter.calendar.JDateChooser();
        deletepolicy = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        pdelete = new javax.swing.JButton();
        pclear = new javax.swing.JButton();
        changepass = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        rpassword = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        rpassword1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        cperror = new javax.swing.JLabel();
        createpolicy1 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        cpolicy1 = new javax.swing.JComboBox<>();
        clear1 = new javax.swing.JButton();
        createp1 = new javax.swing.JButton();
        cmsg1 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        cpremium1 = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        commission1 = new javax.swing.JTextField();
        phkeybox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        exerror = new javax.swing.JLabel();
        min = new javax.swing.JPanel();
        mini3 = new javax.swing.JLabel();
        exit = new javax.swing.JPanel();
        exit3 = new javax.swing.JLabel();
        bpinfo = new javax.swing.JButton();
        bainfo = new javax.swing.JButton();
        bdelpolicy = new javax.swing.JButton();
        signout = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        bcreatep1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("1177326-5011.png")));
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(838, 511));
        setUndecorated(true);
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("AGENT");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(320, 40, 220, 30);

        cpassword.setBackground(new java.awt.Color(255, 255, 255));
        cpassword.setForeground(new java.awt.Color(102, 102, 102));
        cpassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Insurance/icons8-Password Reset-20.png"))); // NOI18N
        cpassword.setText(" CHANGE PASSWORD");
        cpassword.setBorderPainted(false);
        cpassword.setFocusPainted(false);
        cpassword.setFocusable(false);
        cpassword.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        cpassword.setMargin(new java.awt.Insets(2, 20, 2, 14));
        cpassword.setRequestFocusEnabled(false);
        cpassword.setRolloverEnabled(false);
        cpassword.setVerifyInputWhenFocusTarget(false);
        cpassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cpasswordMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cpasswordMouseExited(evt);
            }
        });
        cpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpasswordActionPerformed(evt);
            }
        });
        jPanel3.add(cpassword);
        cpassword.setBounds(0, 350, 200, 50);

        bcreatep.setBackground(new java.awt.Color(255, 255, 255));
        bcreatep.setForeground(new java.awt.Color(102, 102, 102));
        bcreatep.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Insurance/icons8-Add Property-15.png"))); // NOI18N
        bcreatep.setText("  CREATE POLICY");
        bcreatep.setToolTipText("");
        bcreatep.setBorderPainted(false);
        bcreatep.setFocusPainted(false);
        bcreatep.setFocusable(false);
        bcreatep.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        bcreatep.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bcreatep.setMargin(new java.awt.Insets(2, 20, 2, 14));
        bcreatep.setRequestFocusEnabled(false);
        bcreatep.setRolloverEnabled(false);
        bcreatep.setVerifyInputWhenFocusTarget(false);
        bcreatep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bcreatepMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bcreatepMouseExited(evt);
            }
        });
        bcreatep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcreatepActionPerformed(evt);
            }
        });
        jPanel3.add(bcreatep);
        bcreatep.setBounds(0, 200, 200, 50);

        home.setLayout(new java.awt.CardLayout());

        welcome.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("WELCOME");

        agname.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        agname.setForeground(new java.awt.Color(0, 153, 0));

        jLabel4.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Agent");

        javax.swing.GroupLayout welcomeLayout = new javax.swing.GroupLayout(welcome);
        welcome.setLayout(welcomeLayout);
        welcomeLayout.setHorizontalGroup(
            welcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomeLayout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(180, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agname, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(238, 238, 238))
        );
        welcomeLayout.setVerticalGroup(
            welcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomeLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(welcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(agname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(194, Short.MAX_VALUE))
        );

        home.add(welcome, "card2");

        agentinfo.setBackground(new java.awt.Color(255, 255, 255));
        agentinfo.setForeground(new java.awt.Color(0, 153, 0));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 0));
        jLabel3.setText("Agent Info");

        jLabel6.setForeground(new java.awt.Color(0, 153, 0));
        jLabel6.setText("Agent Name           :");

        jLabel7.setForeground(new java.awt.Color(0, 153, 0));
        jLabel7.setText("Address                 :");

        iname.setForeground(new java.awt.Color(0, 153, 0));

        ikey.setForeground(new java.awt.Color(0, 153, 0));

        jLabel11.setForeground(new java.awt.Color(0, 153, 0));
        jLabel11.setText("AgentID                 :");

        iphoneno.setForeground(new java.awt.Color(0, 153, 0));

        jLabel13.setForeground(new java.awt.Color(0, 153, 0));
        jLabel13.setText("Phone                   :");

        ipolicy.setForeground(new java.awt.Color(0, 153, 0));

        jLabel15.setForeground(new java.awt.Color(0, 153, 0));
        jLabel15.setText("Policies Given         :");

        iaddress.setEditable(false);
        iaddress.setColumns(20);
        iaddress.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        iaddress.setForeground(new java.awt.Color(0, 153, 0));
        iaddress.setRows(5);
        iaddress.setBorder(null);
        iaddress.setCaretColor(new java.awt.Color(0, 153, 0));

        javax.swing.GroupLayout agentinfoLayout = new javax.swing.GroupLayout(agentinfo);
        agentinfo.setLayout(agentinfoLayout);
        agentinfoLayout.setHorizontalGroup(
            agentinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agentinfoLayout.createSequentialGroup()
                .addGroup(agentinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agentinfoLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(agentinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(74, 74, 74)
                        .addGroup(agentinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(iname, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(ikey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(iphoneno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ipolicy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(iaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(agentinfoLayout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(jLabel3)))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        agentinfoLayout.setVerticalGroup(
            agentinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agentinfoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(agentinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agentinfoLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(agentinfoLayout.createSequentialGroup()
                        .addComponent(iname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ikey, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(agentinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(agentinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(agentinfoLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(agentinfoLayout.createSequentialGroup()
                        .addComponent(iphoneno, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ipolicy, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        home.add(agentinfo, "card2");

        policyinfo.setBackground(new java.awt.Color(255, 255, 255));

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 153, 0));
        jLabel31.setText("Policy Info");

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 153, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Policy Key", "Policy Holder name", "Type", "Premium"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(0, 153, 0));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout policyinfoLayout = new javax.swing.GroupLayout(policyinfo);
        policyinfo.setLayout(policyinfoLayout);
        policyinfoLayout.setHorizontalGroup(
            policyinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(policyinfoLayout.createSequentialGroup()
                .addContainerGap(111, Short.MAX_VALUE)
                .addGroup(policyinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, policyinfoLayout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(263, 263, 263))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, policyinfoLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84))))
        );
        policyinfoLayout.setVerticalGroup(
            policyinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(policyinfoLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel31)
                .addGap(68, 68, 68)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(182, Short.MAX_VALUE))
        );

        home.add(policyinfo, "card3");

        createpolicy.setBackground(new java.awt.Color(255, 255, 255));
        createpolicy.setLayout(null);

        jLabel18.setForeground(new java.awt.Color(0, 153, 0));
        jLabel18.setText("Name                  :");
        createpolicy.add(jLabel18);
        jLabel18.setBounds(100, 40, 129, 14);

        jLabel19.setForeground(new java.awt.Color(0, 153, 0));
        jLabel19.setText("Address               :");
        createpolicy.add(jLabel19);
        jLabel19.setBounds(100, 70, 129, 14);

        jLabel23.setForeground(new java.awt.Color(0, 153, 0));
        jLabel23.setText("Phone                 :");
        createpolicy.add(jLabel23);
        jLabel23.setBounds(100, 160, 129, 14);

        jLabel26.setForeground(new java.awt.Color(0, 153, 0));
        jLabel26.setText("DoB                     :");
        createpolicy.add(jLabel26);
        jLabel26.setBounds(100, 190, 129, 14);

        jLabel27.setForeground(new java.awt.Color(0, 153, 0));
        jLabel27.setText("Sex                     :");
        createpolicy.add(jLabel27);
        jLabel27.setBounds(100, 220, 129, 14);

        csex.setBackground(new java.awt.Color(0, 153, 0));
        csex.setForeground(new java.awt.Color(51, 51, 51));
        csex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Male", "Female", "Other" }));
        csex.setFocusable(false);
        csex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csexActionPerformed(evt);
            }
        });
        createpolicy.add(csex);
        csex.setBounds(360, 220, 129, 20);

        jLabel28.setForeground(new java.awt.Color(0, 153, 0));
        jLabel28.setText("Premium               :");
        createpolicy.add(jLabel28);
        jLabel28.setBounds(100, 280, 129, 20);

        cpolicy.setBackground(new java.awt.Color(0, 153, 0));
        cpolicy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Personal", "Home", "Vehicle", "Medical" }));
        cpolicy.setBorder(null);
        cpolicy.setFocusable(false);
        cpolicy.setLightWeightPopupEnabled(false);
        cpolicy.setRequestFocusEnabled(false);
        cpolicy.setVerifyInputWhenFocusTarget(false);
        cpolicy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpolicyActionPerformed(evt);
            }
        });
        createpolicy.add(cpolicy);
        cpolicy.setBounds(360, 250, 129, 18);

        caddress.setColumns(20);
        caddress.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        caddress.setRows(5);
        caddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));
        caddress.setCaretColor(new java.awt.Color(0, 153, 0));
        createpolicy.add(caddress);
        caddress.setBounds(360, 70, 190, 80);

        cphone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));
        cphone.setCaretColor(new java.awt.Color(0, 153, 0));
        cphone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cphoneActionPerformed(evt);
            }
        });
        createpolicy.add(cphone);
        cphone.setBounds(360, 160, 190, 20);

        cname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));
        cname.setCaretColor(new java.awt.Color(0, 153, 0));
        cname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnameActionPerformed(evt);
            }
        });
        createpolicy.add(cname);
        cname.setBounds(360, 40, 190, 20);

        clear.setBackground(new java.awt.Color(0, 153, 0));
        clear.setForeground(new java.awt.Color(51, 51, 51));
        clear.setText("CLEAR");
        clear.setBorder(null);
        clear.setFocusPainted(false);
        clear.setFocusable(false);
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        createpolicy.add(clear);
        clear.setBounds(360, 360, 90, 30);

        createp.setBackground(new java.awt.Color(0, 153, 0));
        createp.setForeground(new java.awt.Color(51, 51, 51));
        createp.setText("CREATE");
        createp.setBorder(null);
        createp.setFocusPainted(false);
        createp.setFocusable(false);
        createp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createpActionPerformed(evt);
            }
        });
        createpolicy.add(createp);
        createp.setBounds(200, 360, 90, 30);

        cmsg.setForeground(new java.awt.Color(255, 0, 0));
        cmsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createpolicy.add(cmsg);
        cmsg.setBounds(0, 340, 640, 20);

        jLabel32.setForeground(new java.awt.Color(0, 153, 0));
        jLabel32.setText("Policy Type          :");
        createpolicy.add(jLabel32);
        jLabel32.setBounds(100, 250, 129, 14);

        cpremium.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));
        cpremium.setCaretColor(new java.awt.Color(0, 153, 0));
        createpolicy.add(cpremium);
        cpremium.setBounds(360, 280, 200, 20);

        jLabel33.setForeground(new java.awt.Color(0, 153, 0));
        jLabel33.setText("Commission          :");
        createpolicy.add(jLabel33);
        jLabel33.setBounds(100, 310, 129, 20);

        commission.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));
        commission.setCaretColor(new java.awt.Color(0, 153, 0));
        createpolicy.add(commission);
        commission.setBounds(360, 310, 200, 20);
        createpolicy.add(cdob);
        cdob.setBounds(360, 190, 190, 20);

        home.add(createpolicy, "card3");

        deletepolicy.setBackground(new java.awt.Color(255, 255, 255));

        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 153, 0));
        jLabel29.setText("Delete a Policy");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 153, 0));
        jLabel30.setText("Select a Policy");

        jComboBox3.setBackground(new java.awt.Color(0, 153, 0));
        jComboBox3.setFocusable(false);
        jComboBox3.setRequestFocusEnabled(false);

        pdelete.setBackground(new java.awt.Color(0, 153, 0));
        pdelete.setForeground(new java.awt.Color(51, 51, 51));
        pdelete.setText("DELETE");
        pdelete.setBorder(null);
        pdelete.setBorderPainted(false);
        pdelete.setFocusPainted(false);
        pdelete.setFocusable(false);
        pdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdeleteActionPerformed(evt);
            }
        });

        pclear.setBackground(new java.awt.Color(0, 153, 0));
        pclear.setForeground(new java.awt.Color(51, 51, 51));
        pclear.setText("CLEAR");
        pclear.setBorder(null);
        pclear.setBorderPainted(false);
        pclear.setFocusPainted(false);
        pclear.setFocusable(false);
        pclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pclearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deletepolicyLayout = new javax.swing.GroupLayout(deletepolicy);
        deletepolicy.setLayout(deletepolicyLayout);
        deletepolicyLayout.setHorizontalGroup(
            deletepolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletepolicyLayout.createSequentialGroup()
                .addGroup(deletepolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deletepolicyLayout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addGroup(deletepolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(deletepolicyLayout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(jLabel29)))
                .addContainerGap(246, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deletepolicyLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118)
                .addComponent(pclear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(178, 178, 178))
        );
        deletepolicyLayout.setVerticalGroup(
            deletepolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletepolicyLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel29)
                .addGap(55, 55, 55)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addGroup(deletepolicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pclear, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(133, Short.MAX_VALUE))
        );

        home.add(deletepolicy, "card2");

        changepass.setBackground(new java.awt.Color(255, 255, 255));
        changepass.setLayout(null);

        jLabel5.setForeground(new java.awt.Color(0, 153, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Re-type password");
        changepass.add(jLabel5);
        jLabel5.setBounds(227, 170, 190, 29);

        rpassword.setForeground(new java.awt.Color(0, 153, 0));
        rpassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));
        rpassword.setCaretColor(new java.awt.Color(0, 153, 0));
        rpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpasswordActionPerformed(evt);
            }
        });
        changepass.add(rpassword);
        rpassword.setBounds(227, 119, 190, 33);

        jLabel24.setForeground(new java.awt.Color(0, 153, 0));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("New Password");
        changepass.add(jLabel24);
        jLabel24.setBounds(227, 72, 190, 29);

        rpassword1.setForeground(new java.awt.Color(0, 153, 0));
        rpassword1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));
        rpassword1.setCaretColor(new java.awt.Color(0, 153, 0));
        rpassword1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpassword1ActionPerformed(evt);
            }
        });
        changepass.add(rpassword1);
        rpassword1.setBounds(227, 217, 190, 33);

        jButton1.setBackground(new java.awt.Color(0, 153, 0));
        jButton1.setForeground(new java.awt.Color(51, 51, 51));
        jButton1.setText("CHANGE");
        jButton1.setFocusPainted(false);
        jButton1.setFocusable(false);
        jButton1.setRequestFocusEnabled(false);
        jButton1.setRolloverEnabled(false);
        jButton1.setVerifyInputWhenFocusTarget(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        changepass.add(jButton1);
        jButton1.setBounds(249, 302, 146, 37);

        cperror.setForeground(new java.awt.Color(255, 0, 0));
        cperror.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        changepass.add(cperror);
        cperror.setBounds(0, 270, 640, 20);

        home.add(changepass, "card3");

        createpolicy1.setBackground(new java.awt.Color(255, 255, 255));
        createpolicy1.setLayout(null);

        jLabel36.setForeground(new java.awt.Color(0, 153, 0));
        jLabel36.setText("Premium               :");
        createpolicy1.add(jLabel36);
        jLabel36.setBounds(100, 190, 129, 20);

        cpolicy1.setBackground(new java.awt.Color(0, 153, 0));
        cpolicy1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Personal", "Home", "Vehicle", "Medical" }));
        cpolicy1.setBorder(null);
        cpolicy1.setFocusable(false);
        cpolicy1.setLightWeightPopupEnabled(false);
        cpolicy1.setRequestFocusEnabled(false);
        cpolicy1.setVerifyInputWhenFocusTarget(false);
        cpolicy1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpolicy1ActionPerformed(evt);
            }
        });
        createpolicy1.add(cpolicy1);
        cpolicy1.setBounds(360, 160, 129, 18);

        clear1.setBackground(new java.awt.Color(0, 153, 0));
        clear1.setForeground(new java.awt.Color(51, 51, 51));
        clear1.setText("CLEAR");
        clear1.setBorder(null);
        clear1.setFocusPainted(false);
        clear1.setFocusable(false);
        clear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear1ActionPerformed(evt);
            }
        });
        createpolicy1.add(clear1);
        clear1.setBounds(360, 300, 90, 30);

        createp1.setBackground(new java.awt.Color(0, 153, 0));
        createp1.setForeground(new java.awt.Color(51, 51, 51));
        createp1.setText("CREATE");
        createp1.setBorder(null);
        createp1.setFocusPainted(false);
        createp1.setFocusable(false);
        createp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createp1ActionPerformed(evt);
            }
        });
        createpolicy1.add(createp1);
        createp1.setBounds(200, 300, 90, 30);

        cmsg1.setForeground(new java.awt.Color(255, 0, 0));
        cmsg1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createpolicy1.add(cmsg1);
        cmsg1.setBounds(0, 340, 640, 20);

        jLabel37.setForeground(new java.awt.Color(0, 153, 0));
        jLabel37.setText("Policy Type          :");
        createpolicy1.add(jLabel37);
        jLabel37.setBounds(100, 160, 129, 14);

        cpremium1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));
        cpremium1.setCaretColor(new java.awt.Color(0, 153, 0));
        createpolicy1.add(cpremium1);
        cpremium1.setBounds(360, 190, 200, 20);

        jLabel38.setForeground(new java.awt.Color(0, 153, 0));
        jLabel38.setText("Commission          :");
        createpolicy1.add(jLabel38);
        jLabel38.setBounds(100, 220, 129, 20);

        commission1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));
        commission1.setCaretColor(new java.awt.Color(0, 153, 0));
        createpolicy1.add(commission1);
        commission1.setBounds(360, 220, 200, 20);

        phkeybox.setBackground(new java.awt.Color(0, 153, 0));
        phkeybox.setFocusable(false);
        phkeybox.setLightWeightPopupEnabled(false);
        phkeybox.setRequestFocusEnabled(false);
        phkeybox.setVerifyInputWhenFocusTarget(false);
        createpolicy1.add(phkeybox);
        phkeybox.setBounds(250, 80, 130, 20);

        jLabel8.setForeground(new java.awt.Color(0, 153, 0));
        jLabel8.setText("Select Policyholder key");
        createpolicy1.add(jLabel8);
        jLabel8.setBounds(260, 60, 110, 14);

        exerror.setForeground(new java.awt.Color(255, 0, 0));
        exerror.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createpolicy1.add(exerror);
        exerror.setBounds(0, 260, 640, 20);

        home.add(createpolicy1, "card3");

        jPanel3.add(home);
        home.setBounds(200, 100, 640, 410);

        min.setBackground(new java.awt.Color(255, 255, 255));
        min.setForeground(new java.awt.Color(153, 153, 153));
        min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minMouseExited(evt);
            }
        });

        mini3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        mini3.setForeground(new java.awt.Color(153, 153, 153));
        mini3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mini3.setText("-");
        mini3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mini3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mini3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mini3MouseExited(evt);
            }
        });
        min.add(mini3);

        jPanel3.add(min);
        min.setBounds(780, 0, 30, 30);

        exit.setBackground(new java.awt.Color(255, 255, 255));
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitMouseExited(evt);
            }
        });

        exit3.setBackground(new java.awt.Color(255, 255, 255));
        exit3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        exit3.setForeground(new java.awt.Color(153, 153, 153));
        exit3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exit3.setText("X");
        exit3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exit3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exit3MouseExited(evt);
            }
        });
        exit.add(exit3);

        jPanel3.add(exit);
        exit.setBounds(810, 0, 30, 30);

        bpinfo.setBackground(new java.awt.Color(255, 255, 255));
        bpinfo.setForeground(new java.awt.Color(102, 102, 102));
        bpinfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Insurance/icons8-Info-20.png"))); // NOI18N
        bpinfo.setText("  POLICY INFO");
        bpinfo.setBorderPainted(false);
        bpinfo.setFocusPainted(false);
        bpinfo.setFocusable(false);
        bpinfo.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        bpinfo.setMargin(new java.awt.Insets(2, 20, 2, 14));
        bpinfo.setRequestFocusEnabled(false);
        bpinfo.setRolloverEnabled(false);
        bpinfo.setVerifyInputWhenFocusTarget(false);
        bpinfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bpinfoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bpinfoMouseExited(evt);
            }
        });
        bpinfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpinfoActionPerformed(evt);
            }
        });
        jPanel3.add(bpinfo);
        bpinfo.setBounds(0, 150, 200, 50);

        bainfo.setBackground(new java.awt.Color(255, 255, 255));
        bainfo.setForeground(new java.awt.Color(102, 102, 102));
        bainfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Insurance/icons8-Info-20.png"))); // NOI18N
        bainfo.setText("  AGENT INFO");
        bainfo.setBorderPainted(false);
        bainfo.setFocusPainted(false);
        bainfo.setFocusable(false);
        bainfo.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        bainfo.setMargin(new java.awt.Insets(2, 20, 2, 14));
        bainfo.setRequestFocusEnabled(false);
        bainfo.setRolloverEnabled(false);
        bainfo.setVerifyInputWhenFocusTarget(false);
        bainfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bainfoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bainfoMouseExited(evt);
            }
        });
        bainfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bainfoActionPerformed(evt);
            }
        });
        jPanel3.add(bainfo);
        bainfo.setBounds(0, 100, 200, 50);

        bdelpolicy.setBackground(new java.awt.Color(255, 255, 255));
        bdelpolicy.setForeground(new java.awt.Color(102, 102, 102));
        bdelpolicy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Insurance/icons8-Delete Document-15.png"))); // NOI18N
        bdelpolicy.setText("  DELETE POLICY");
        bdelpolicy.setBorderPainted(false);
        bdelpolicy.setFocusPainted(false);
        bdelpolicy.setFocusable(false);
        bdelpolicy.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        bdelpolicy.setMargin(new java.awt.Insets(2, 20, 2, 14));
        bdelpolicy.setRequestFocusEnabled(false);
        bdelpolicy.setRolloverEnabled(false);
        bdelpolicy.setVerifyInputWhenFocusTarget(false);
        bdelpolicy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bdelpolicyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bdelpolicyMouseExited(evt);
            }
        });
        bdelpolicy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdelpolicyActionPerformed(evt);
            }
        });
        jPanel3.add(bdelpolicy);
        bdelpolicy.setBounds(0, 300, 200, 50);

        signout.setBackground(new java.awt.Color(0, 153, 0));
        signout.setForeground(new java.awt.Color(51, 51, 51));
        signout.setText("Sign Out");
        signout.setFocusPainted(false);
        signout.setFocusable(false);
        signout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        signout.setRequestFocusEnabled(false);
        signout.setRolloverEnabled(false);
        signout.setVerifyInputWhenFocusTarget(false);
        signout.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        signout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signoutActionPerformed(evt);
            }
        });
        jPanel3.add(signout);
        signout.setBounds(720, 40, 90, 30);

        jButton2.setBackground(new java.awt.Color(0, 153, 0));
        jButton2.setForeground(new java.awt.Color(51, 51, 51));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Insurance/icons8-Home Page-20.png"))); // NOI18N
        jButton2.setText("Home");
        jButton2.setFocusable(false);
        jButton2.setRequestFocusEnabled(false);
        jButton2.setRolloverEnabled(false);
        jButton2.setVerifyInputWhenFocusTarget(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);
        jButton2.setBounds(40, 40, 110, 30);

        bcreatep1.setBackground(new java.awt.Color(255, 255, 255));
        bcreatep1.setForeground(new java.awt.Color(102, 102, 102));
        bcreatep1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Insurance/icons8-Add Property-15.png"))); // NOI18N
        bcreatep1.setText(" ADD POLICY ");
        bcreatep1.setToolTipText("");
        bcreatep1.setBorderPainted(false);
        bcreatep1.setFocusPainted(false);
        bcreatep1.setFocusable(false);
        bcreatep1.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        bcreatep1.setMargin(new java.awt.Insets(2, 20, 2, 14));
        bcreatep1.setRequestFocusEnabled(false);
        bcreatep1.setRolloverEnabled(false);
        bcreatep1.setVerifyInputWhenFocusTarget(false);
        bcreatep1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bcreatep1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bcreatep1MouseExited(evt);
            }
        });
        bcreatep1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcreatep1ActionPerformed(evt);
            }
        });
        jPanel3.add(bcreatep1);
        bcreatep1.setBounds(0, 250, 200, 50);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 0, 840, 520);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bcreatepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcreatepActionPerformed
        home.removeAll();
        home.add(createpolicy);
        home.repaint();
        home.revalidate();
        bpinfo.setForeground(new java.awt.Color(102,102,102));
        bcreatep.setForeground(new java.awt.Color(0,153,0));
        bainfo.setForeground(new java.awt.Color(102,102,102));
        cpassword.setForeground(new java.awt.Color(102,102,102));
        bdelpolicy.setForeground(new java.awt.Color(102,102,102));
        bcreatep1.setForeground(new java.awt.Color(102,102,102));
    }//GEN-LAST:event_bcreatepActionPerformed

    private void mini3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mini3MouseClicked
        // TODO add your handling code here:
        setState(Frame.ICONIFIED);
    }//GEN-LAST:event_mini3MouseClicked

    private void mini3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mini3MouseEntered
        min.setBackground(Color.LIGHT_GRAY);
        mini3.setForeground(Color.BLACK);
    }//GEN-LAST:event_mini3MouseEntered

    private void mini3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mini3MouseExited
        min.setBackground(Color.WHITE);
        mini3.setForeground(new java.awt.Color(153,153,153));
    }//GEN-LAST:event_mini3MouseExited

    private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
        setState(Frame.ICONIFIED);
    }//GEN-LAST:event_minMouseClicked

    private void minMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseEntered
        min.setBackground(Color.LIGHT_GRAY);
        mini3.setForeground(Color.BLACK);
    }//GEN-LAST:event_minMouseEntered

    private void minMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseExited
        min.setBackground(Color.WHITE);
        mini3.setForeground(new java.awt.Color(153,153,153));
    }//GEN-LAST:event_minMouseExited

    private void exit3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit3MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exit3MouseClicked

    private void exit3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit3MouseEntered
        exit.setBackground(Color.RED);
        exit3.setForeground(Color.WHITE);
    }//GEN-LAST:event_exit3MouseEntered

    private void exit3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit3MouseExited
        exit.setBackground(Color.WHITE);
        exit3.setForeground(new java.awt.Color(153,153,153));
    }//GEN-LAST:event_exit3MouseExited

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitMouseClicked

    private void exitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseEntered
        exit.setBackground(Color.RED);
        exit3.setForeground(Color.WHITE);
    }//GEN-LAST:event_exitMouseEntered

    private void exitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseExited
        exit.setBackground(Color.WHITE);
        exit3.setForeground(new java.awt.Color(153,153,153));
    }//GEN-LAST:event_exitMouseExited

    @SuppressWarnings("ConvertToTryWithResources")
    private void bainfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bainfoActionPerformed
        home.removeAll();
        home.add(agentinfo);
        home.repaint();
        home.revalidate();
        bpinfo.setForeground(new java.awt.Color(102,102,102));
        bcreatep.setForeground(new java.awt.Color(102,102,102));
        bainfo.setForeground(new java.awt.Color(0,153,0));
        cpassword.setForeground(new java.awt.Color(102,102,102));
        bdelpolicy.setForeground(new java.awt.Color(102,102,102));
        bcreatep1.setForeground(new java.awt.Color(102,102,102));
        try {
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/insurance?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement  pst = conn.prepareStatement("select aname,address,phone from agent where agentkey=?");
            pst.setString(1,Login.username.getText());
            ResultSet rs = pst.executeQuery();
            ikey.setText(Login.username.getText());
            if(rs.next()){
                iname.setText(rs.getString(1));
                iaddress.setText(rs.getString(2));
                iphoneno.setText(Long.toString(rs.getLong(3)));
            }
            pst=conn.prepareStatement("select count(*) from sales where agentkey=?");
            pst.setString(1,Login.username.getText());
            rs = pst.executeQuery();
            if(rs.next()){
                ipolicy.setText(Integer.toString(rs.getInt(1)));
            }
            pst.close();
            conn.close();
        }                                          
        catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bainfoActionPerformed

    private void cpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpasswordActionPerformed
        home.removeAll();
        home.add(changepass);
        home.repaint();
        home.revalidate();
        bpinfo.setForeground(new java.awt.Color(102,102,102));
        bcreatep.setForeground(new java.awt.Color(102,102,102));
        bainfo.setForeground(new java.awt.Color(102,102,102));
        cpassword.setForeground(new java.awt.Color(0,153,0));
        bdelpolicy.setForeground(new java.awt.Color(102,102,102));
        bcreatep1.setForeground(new java.awt.Color(102,102,102));
    }//GEN-LAST:event_cpasswordActionPerformed

    @SuppressWarnings("ConvertToTryWithResources")
    private void bdelpolicyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdelpolicyActionPerformed
        try {
            home.removeAll();
            home.add(deletepolicy);
            home.repaint();
            home.revalidate();
            bpinfo.setForeground(new java.awt.Color(102,102,102));
            bcreatep.setForeground(new java.awt.Color(102,102,102));
            bainfo.setForeground(new java.awt.Color(102,102,102));
            cpassword.setForeground(new java.awt.Color(102,102,102));
            bdelpolicy.setForeground(new java.awt.Color(0,153,0));
            bcreatep1.setForeground(new java.awt.Color(102,102,102));
            jComboBox3.removeAllItems();
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/insurance?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement pst = conn.prepareStatement("select policykey from sales where agentkey=?");
            pst.setString(1,Login.username.getText());
            ResultSet rs=pst.executeQuery();
            jComboBox3.addItem("Select");
            while(rs.next()){
                jComboBox3.addItem(rs.getString(1));
            }
            pst.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Agent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bdelpolicyActionPerformed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        pX = evt.getX();
        pY = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
       setLocation(getLocation().x + evt.getX() - pX,getLocation().y + evt.getY() - pY); 
    }//GEN-LAST:event_formMouseDragged

    private void signoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signoutActionPerformed
        Login.main(new String[0]);
        dispose();
    }//GEN-LAST:event_signoutActionPerformed

    private void cpasswordMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cpasswordMouseEntered
        cpassword.setBackground(Color.lightGray);
    }//GEN-LAST:event_cpasswordMouseEntered

    private void cpasswordMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cpasswordMouseExited
        cpassword.setBackground(Color.WHITE);
    }//GEN-LAST:event_cpasswordMouseExited

    private void bcreatepMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bcreatepMouseEntered
        bcreatep.setBackground(Color.lightGray);
    }//GEN-LAST:event_bcreatepMouseEntered

    private void bcreatepMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bcreatepMouseExited
        bcreatep.setBackground(Color.WHITE);
    }//GEN-LAST:event_bcreatepMouseExited

    private void bpinfoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bpinfoMouseEntered
        bpinfo.setBackground(Color.lightGray);
    }//GEN-LAST:event_bpinfoMouseEntered

    private void bpinfoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bpinfoMouseExited
        bpinfo.setBackground(Color.WHITE);
    }//GEN-LAST:event_bpinfoMouseExited

    private void bainfoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bainfoMouseEntered
        bainfo.setBackground(Color.lightGray);
    }//GEN-LAST:event_bainfoMouseEntered

    private void bainfoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bainfoMouseExited
        bainfo.setBackground(Color.WHITE);
    }//GEN-LAST:event_bainfoMouseExited

    private void bdelpolicyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bdelpolicyMouseEntered
       bdelpolicy.setBackground(Color.lightGray);
    }//GEN-LAST:event_bdelpolicyMouseEntered

    private void bdelpolicyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bdelpolicyMouseExited
       bdelpolicy.setBackground(Color.WHITE);
    }//GEN-LAST:event_bdelpolicyMouseExited

    private void bpinfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpinfoActionPerformed
        home.removeAll();
        home.add(policyinfo);
        home.repaint();
        home.revalidate();
        bpinfo.setForeground(new java.awt.Color(0,153,0));
        bcreatep.setForeground(new java.awt.Color(102,102,102));
        bainfo.setForeground(new java.awt.Color(102,102,102));
        cpassword.setForeground(new java.awt.Color(102,102,102));
        bdelpolicy.setForeground(new java.awt.Color(102,102,102));
        bcreatep1.setForeground(new java.awt.Color(102,102,102));
        setTable();  
        getdata();
    }//GEN-LAST:event_bpinfoActionPerformed

    private void rpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpasswordActionPerformed
        cperror.setText("");
    }//GEN-LAST:event_rpasswordActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        home.removeAll();
        home.add(welcome);
        home.repaint();
        home.revalidate();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try {
            
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/insurance?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement pst = conn.prepareStatement("select agentkey from agent where agentkey=?");
            pst.setString(1,Login.username.getText());
            ResultSet rs=pst.executeQuery();
            while(rs.next()){
                if(rpassword1.getText() == null ? rpassword.getText() == null : rpassword1.getText().equals(rpassword.getText())) {
                    pst = conn.prepareStatement("update agent set password=? where agentkey=?");
                    pst.setString(1,rpassword.getText());
                    pst.setString(2,rs.getString(1));
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null,"Password sucessfully changed ");
                    pst.close();
                    pst.close();
                    conn.close(); 
                    rpassword.setText("");
                    rpassword1.setText(""); 
                       
                       
                    }
                    else {
                       cperror.setText("Password does not match");
                       pst.close();
                       pst.close();
                       conn.close(); 
                       rpassword.setText("");
                       rpassword1.setText("");
                    } 
                
            }    
                
          }   
        catch(SQLException e) {
           
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void csexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_csexActionPerformed

    private void pdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdeleteActionPerformed
        String pkey = null;
        try {
            if(jComboBox3.getSelectedIndex()!=0) {
                Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/insurance?zeroDateTimeBehavior=convertToNull","root","");
                PreparedStatement  pst = conn.prepareStatement("select phkey from insuredby where policykey=?");
                pst.setString(1, (String) jComboBox3.getSelectedItem());
                ResultSet rs=pst.executeQuery();
                if(rs.next())
                        pkey=rs.getString(1);
                pst = conn.prepareStatement("delete from policy where policykey=?");
                pst.setString(1, (String) jComboBox3.getSelectedItem());
                String msg = "Do you want to delete "+(String) jComboBox3.getSelectedItem();
                int n = JOptionPane.showConfirmDialog(deletepolicy, msg,"Delete",JOptionPane.YES_NO_OPTION);
                if(n==0) {
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(null,"Sucessfully deleted "+(String) jComboBox3.getSelectedItem());
                    jComboBox3.removeAllItems();
                    pst = conn.prepareStatement("select policykey from sales where agentkey=?");
                    pst.setString(1,Login.username.getText());
                    rs=pst.executeQuery();
                    @SuppressWarnings("UnusedAssignment")
                    int count=0;
                    jComboBox3.addItem("Select");
                    while(rs.next()){
                        jComboBox3.addItem(rs.getString(1));
                    }
                    pst = conn.prepareStatement("select count(*) from insuredby natursl join insuredtype where phkey=?");
                    pst.setString(1,pkey);
                    rs=pst.executeQuery();
                    if(rs.next())
                        count=rs.getInt(1);
                    if(count==0){
                        pst = conn.prepareStatement("delete from policyholder where phkey=?");
                        pst.setString(1,pkey);
                        pst.executeUpdate();
                    }
                    pst.close();
                    conn.close();
                }
                else {
                    jComboBox3.setSelectedIndex(0);
                    pst.close();
                    conn.close();
                }       
            }
            else{
                JOptionPane.showMessageDialog(null,"Select policy key");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,ex);
        }
    }//GEN-LAST:event_pdeleteActionPerformed

    private void cpolicyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpolicyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpolicyActionPerformed

    private void cphoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cphoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cphoneActionPerformed

    @SuppressWarnings("ConvertToTryWithResources")
    private void createpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createpActionPerformed
        if(cname.getText()!=null && cpolicy.getActionCommand()!=null && cphone.getText()!=null && cdob.getDateFormatString()!=null && cphone.getText()!=null && csex.getActionCommand()!=null) {
           try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/insurance?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement pst = conn.prepareStatement("select phkey from policyholder");
            ResultSet rs = pst.executeQuery();
            generateClientkey();
            while(rs.next()){
                if(rs.getString(1) == null ? s == null : rs.getString(1).equals(s))
                    generateClientkey();
            }
            pst = conn.prepareStatement("insert into policyholder values(?,?,?,?,?,?,?,?)");
            generateClientkey();
            pst.setString(1,s);
            pst.setString(2,cname.getText());
            pst.setString(3,caddress.getText());
            SimpleDateFormat sf = new SimpleDateFormat("dd-MMMMMM-yyyy");
            String D = sf.format(cdob.getDate());
            String arr[] = D.split("-");
            int day = Integer.parseInt(arr[0]);
            Month month = (Month.valueOf(arr[1].toUpperCase()));
            int year = Integer.parseInt(arr[2]);
            LocalDate today = LocalDate.now();
            LocalDate dob = LocalDate.of(year, month, day);
            Period P = Period.between(dob,today);
            pst.setInt(4,P.getYears());
            pst.setString(5, (String) csex.getSelectedItem());
            pst.setDate(6,new java.sql.Date(sf.parse(D).getTime()));
            pst.setLong(7,Long.parseLong(cphone.getText()));
            pst.setString(8,"welcome");
            pst.executeUpdate();
            generatePolicykey();
            pst = conn.prepareStatement("select policykey from policy");
            rs = pst.executeQuery();
            generatePolicykey();
            while(rs.next()){
                if(rs.getString(1) == null ? s1 == null : rs.getString(1).equals(s1))
                    generatePolicykey();
            }
            pst = conn.prepareStatement("insert into policy values(?,?,?)");
            pst.setString(1,s1);
            pst.setString(2, (String) cpolicy.getSelectedItem());
            if(null == (String) cpolicy.getSelectedItem())
                cmsg.setText("Fill all fields");
            else switch ((String) cpolicy.getSelectedItem()) {
                case "Personal":
                    pst.setInt(3,12);
                    break;
                case "Home":
                    pst.setInt(3,24);
                    break;
                case "Vehicle":
                    pst.setInt(3,24);
                    break;
                case "Medical":
                    pst.setInt(3,30);
                    break;
                default:
                    cmsg.setText("Fill all fields");
                    break;
            }
            pst.executeUpdate();
            pst = conn.prepareStatement("insert into insuredby values(?,?)");
            pst.setString(1,s1);
            pst.setString(2,s);
            pst.executeUpdate();
            pst = conn.prepareStatement("insert into insuredtype values(?,?,?)");
            pst.setString(1,s1);
            pst.setString(2,(String) cpolicy.getSelectedItem());
            pst.setLong(3,Long.parseLong(cpremium.getText()));
            pst.executeUpdate();
            pst = conn.prepareStatement("insert into sales values(?,?,?)");
            pst.setString(1,Login.username.getText());
            pst.setString(2,s1);
            pst.setLong(3,Long.parseLong(commission.getText()));
            pst.executeUpdate();
            pst = conn.prepareStatement("insert into clients values(?,?,?)");
            pst.setString(1,Login.username.getText());
            pst.setString(2,s1);
            pst.setString(3,s);
            pst.executeUpdate();
            pst.close();
            conn.close();  
            String msg = "Sucessfully created\n Policy Holder Key/User ID:"+s+"Policy Key"+s1+"\nDefault password is 'welcome'";
            JOptionPane.showMessageDialog(null,msg);
            cname.setText("");
            caddress.setText("");
            cphone.setText("");
            cpolicy.setActionCommand("");
            csex.setSelectedIndex(0);
            cdob.setDateFormatString("");
            cpolicy.setSelectedIndex(0);
            cpremium.setText("");
            commission.setText("");
        }
        catch(SQLException e) {
            JOptionPane.showMessageDialog(null,e);
        }   catch (ParseException ex) {
                Logger.getLogger(Agent.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
           cmsg.setText("Please fill all fields"); 
        }    
    }//GEN-LAST:event_createpActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        cname.setText("");
        caddress.setText("");
        cphone.setText("");
        csex.setSelectedIndex(0);
        cdob.setDateFormatString("");
        cpolicy.setSelectedIndex(0);
        cpremium.setText("");
        commission.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void cnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cnameActionPerformed

    private void cpolicy1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpolicy1ActionPerformed
        exerror.setText("");
    }//GEN-LAST:event_cpolicy1ActionPerformed

    private void clear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear1ActionPerformed
      cpolicy1.setSelectedIndex(0);
      cpremium1.setText("");
      commission1.setText("");
      phkeybox.setSelectedIndex(0);
      exerror.setText("");
    }//GEN-LAST:event_clear1ActionPerformed

    @SuppressWarnings("ConvertToTryWithResources")
    private void createp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createp1ActionPerformed
        int flag=0;
        try {
            if(phkeybox.getSelectedIndex()!=0||cpolicy1.getSelectedIndex()!=0||!"".equals(cpremium1.getText())||!"".equals(commission1.getText())) {
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/insurance?zeroDateTimeBehavior=convertToNull","root","");
                PreparedStatement pst = conn.prepareStatement("select type from insuredby natural join insuredtype where phkey=?");
                pst.setString(1, (String) phkeybox.getSelectedItem());
                ResultSet rs = pst.executeQuery();
                while(rs.next()){
                    if(rs.getString(1) == null ? (String) cpolicy1.getSelectedItem() != null : !rs.getString(1).equals((String) cpolicy1.getSelectedItem())) {
                        flag=1;
                    }
                    else {
                        flag=0;
                    }
                }
                if(flag!=0) {
                    pst = conn.prepareStatement("select policykey from policy");
                    rs = pst.executeQuery();
                    generatePolicykey();
                    while(rs.next()){
                        if(rs.getString(1) == null ? s1 == null : rs.getString(1).equals(s1))
                            generatePolicykey();
                    }
                    pst = conn.prepareStatement("insert into policy values(?,?,?)");
                    pst.setString(1,s1);
                    pst.setString(2, (String) cpolicy1.getSelectedItem());
                    if(null == (String) cpolicy1.getSelectedItem())
                        exerror.setText("Fill all fields");
                    else switch ((String) cpolicy1.getSelectedItem()) {
                        case "Personal":
                            pst.setInt(3,12);
                            break;
                        case "Home":
                            pst.setInt(3,24);
                            break;
                        case "Vehicle":
                            pst.setInt(3,24);
                            break;
                        case "Medical":
                            pst.setInt(3,30);
                            break;
                        default:
                            exerror.setText("Fill all fields");
                            break;
                    }
                    pst.executeUpdate();
                    pst = conn.prepareStatement("insert into insuredby values(?,?)");
                    pst.setString(1,s1);
                    pst.setString(2, (String) phkeybox.getSelectedItem());
                    pst.executeUpdate();
                    pst = conn.prepareStatement("insert into insuredtype values(?,?,?)");
                    pst.setString(1,s1);
                    pst.setString(2,(String) cpolicy1.getSelectedItem());
                    pst.setLong(3,Long.parseLong(cpremium1.getText()));
                    pst.executeUpdate();
                    pst = conn.prepareStatement("insert into sales values(?,?,?)");
                    pst.setString(1,Login.username.getText());
                    pst.setString(2,s1);
                    pst.setLong(3,Long.parseLong(commission1.getText()));
                    pst.executeUpdate();
                    pst = conn.prepareStatement("insert into clients values(?,?,?)");
                    pst.setString(1,Login.username.getText());
                    pst.setString(2,s1);
                    pst.setString(3,s);
                    pst.executeUpdate();
                    pst.close();
                    conn.close();  
                    String msg = "Sucessfully created\nPolicy Key"+s1+"";
                    JOptionPane.showMessageDialog(null,msg);
                    cpolicy1.setSelectedIndex(0);
                    cpremium1.setText("");
                    commission1.setText("");
                    phkeybox.setSelectedIndex(0);
                }
                else {
                    exerror.setText("Policy already taken for this type");
                }
            }
            else
                exerror.setText("Please fill all fields");
        } catch (SQLException ex) {
            Logger.getLogger(Agent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_createp1ActionPerformed

    private void bcreatep1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bcreatep1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_bcreatep1MouseEntered

    private void bcreatep1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bcreatep1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_bcreatep1MouseExited

    @SuppressWarnings("ConvertToTryWithResources")
    private void bcreatep1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcreatep1ActionPerformed
        try {
            home.removeAll();
            home.add(createpolicy1);
            home.repaint();
            home.revalidate();
            bpinfo.setForeground(new java.awt.Color(102,102,102));
            bcreatep.setForeground(new java.awt.Color(102,102,102));
            bainfo.setForeground(new java.awt.Color(102,102,102));
            cpassword.setForeground(new java.awt.Color(102,102,102));
            bdelpolicy.setForeground(new java.awt.Color(102,102,102));
            bcreatep1.setForeground(new java.awt.Color(0,153,0));
            phkeybox.removeAllItems();
            Connection conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/insurance?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement pst = conn.prepareStatement("select distinct phkey from sales natural join insuredby where agentkey=?");
            pst.setString(1,Login.username.getText());
            ResultSet rs=pst.executeQuery();
            phkeybox.addItem("Select");
            while(rs.next()){
                phkeybox.addItem(rs.getString(1));
            }
            pst.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Agent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bcreatep1ActionPerformed

    private void pclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pclearActionPerformed
        jComboBox3.setSelectedIndex(0);
    }//GEN-LAST:event_pclearActionPerformed

    private void rpassword1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpassword1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rpassword1ActionPerformed
    
    private void setTable() {  
       dm = new DefaultTableModel(0, 0);  
       String f[] = new String[]{"Policy Key", "Policyholder Key","Type","Premium"};  
       dm.setColumnIdentifiers(f);  
       jTable1.setModel(dm);
    }  
     private void getdata() {  
       Connection conn;  
       try {  
       conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/insurance?zeroDateTimeBehavior=convertToNull","root",""); 
       PreparedStatement pst = conn.prepareStatement("select * from insuredby natural join insuredtype natural join sales where agentkey=?");
       pst.setString(1,Login.username.getText());
       ResultSet rs = pst.executeQuery();  
       while (rs.next()) {  
         String pkey = rs.getString(1);  
         String phkey = rs.getString(2);
         String type = rs.getString(3);
         Long premium = rs.getLong(4);
         @SuppressWarnings("UseOfObsoleteCollectionType")
         Vector<String> vector = new Vector<>();  
         String premium1 = Long.toString(premium);
         vector.add(pkey);  
         vector.add(phkey);
         vector.add(type);
         vector.add(premium1);
         dm.addRow(vector);  
       }  
     } catch (SQLException ex) {  
            Logger.getLogger(Agent.class.getName()).log(Level.SEVERE, null, ex);  
     }  
   }  
    /**
     * @param args the command line arguments
     */
    @SuppressWarnings("Convert2Lambda")
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("MetroUI".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @SuppressWarnings("override")
            public void run() {
                new Agent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel agentinfo;
    public javax.swing.JLabel agname;
    private javax.swing.JButton bainfo;
    private javax.swing.JButton bcreatep;
    private javax.swing.JButton bcreatep1;
    private javax.swing.JButton bdelpolicy;
    private javax.swing.JButton bpinfo;
    private javax.swing.JTextArea caddress;
    private com.toedter.calendar.JDateChooser cdob;
    private javax.swing.JPanel changepass;
    private javax.swing.JButton clear;
    private javax.swing.JButton clear1;
    private javax.swing.JLabel cmsg;
    private javax.swing.JLabel cmsg1;
    private javax.swing.JTextField cname;
    private javax.swing.JTextField commission;
    private javax.swing.JTextField commission1;
    private javax.swing.JButton cpassword;
    private javax.swing.JLabel cperror;
    private javax.swing.JTextField cphone;
    private javax.swing.JComboBox<String> cpolicy;
    private javax.swing.JComboBox<String> cpolicy1;
    private javax.swing.JTextField cpremium;
    private javax.swing.JTextField cpremium1;
    private javax.swing.JButton createp;
    private javax.swing.JButton createp1;
    private javax.swing.JPanel createpolicy;
    private javax.swing.JPanel createpolicy1;
    private javax.swing.JComboBox<String> csex;
    private javax.swing.JPanel deletepolicy;
    private javax.swing.JLabel exerror;
    private javax.swing.JPanel exit;
    private javax.swing.JLabel exit3;
    private javax.swing.JPanel home;
    private javax.swing.JTextArea iaddress;
    private javax.swing.JLabel ikey;
    private javax.swing.JLabel iname;
    private javax.swing.JLabel iphoneno;
    private javax.swing.JLabel ipolicy;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel min;
    private javax.swing.JLabel mini3;
    private javax.swing.JButton pclear;
    private javax.swing.JButton pdelete;
    private javax.swing.JComboBox<String> phkeybox;
    private javax.swing.JPanel policyinfo;
    private javax.swing.JTextField rpassword;
    private javax.swing.JPasswordField rpassword1;
    private javax.swing.JButton signout;
    private javax.swing.JPanel welcome;
    // End of variables declaration//GEN-END:variables

    private void generatePolicykey() {
        String alphabet1= "0123456789";
        s1 = "P";
        Random random1 = new Random();
        int randomLen1 = 5;
        for (int i = 1; i < randomLen1; i++) {
            char  c = alphabet1.charAt(random1.nextInt(10));
            s1+=c;
        }
    }

    private void generateClientkey() {
       String alphabet= "0123456789";
       s = "C";
       Random random = new Random();
       int randomLen = 5;
       for (int i = 1; i < randomLen; i++) {
            char  c = alphabet.charAt(random.nextInt(10));
            s+=c;
        }
    }
}
